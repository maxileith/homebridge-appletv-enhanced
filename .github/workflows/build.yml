name: Build

on:
  pull_request:
    paths:
      - "**.ts"
      - "**.js"
      - "**.json"
      - "**.mjs"
      - "**.mts"
      - "**.html"
      - ".npmignore"
  workflow_dispatch:

jobs:
  node-versions-from-package:
    name: extract node versions from package.json

    runs-on: ubuntu-latest

    outputs:
      versions: ${{ steps.load-versions.outputs.versions }}

    steps:
      - name: Checkout package.json
        uses: actions/checkout@v4
        with:
          sparse-checkout: package.json

      - name: Extract Node versions
        id: load-versions
        shell: bash
        run: |
          # read .engines.node attribute from package.json
          version_str=$(jq ".engines.node" package.json --raw-output)

          # split the version string into individual versions
          IFS=' || ' read -r -a versions <<< "$version_str"

          # filter empty elements
          filtered_versions=()
          for v in "${versions[@]}"; do
            if [ -n "$v" ]; then
              filtered_versions+=("$v")
            fi
          done

          # remove "^" from filtered_versions
          clean_versions=()
          for v in "${filtered_versions[@]}"; do
            clean_version="${v:1}"
            clean_versions+=("$clean_version")
          done

          # merge versions together
          version_list_as_str=""
          for v in "${clean_versions[@]}"; do
            if [ -n "$version_list_as_str" ]; then
              version_list_as_str+=", "
            fi
            version_list_as_str+="\""
            version_list_as_str+="$v"
            version_list_as_str+="\""
          done

          result="versions={\"list\": [$version_list_as_str]}"
          echo $result

          echo $result >> $GITHUB_OUTPUT

  build:
    name: ubuntu-latest Node ${{ matrix.node }} Build
    needs: node-versions-from-package

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: ${{ fromJSON(needs.node-versions-from-package.outputs.versions).list }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Build
        shell: bash
        run: npm run build

      - name: Install homebridge@beta
        shell: bash
        run: npm install homebridge@beta

      - name: Build with homebridge@beta
        shell: bash
        run: npm run build
